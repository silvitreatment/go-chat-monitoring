.PHONY: help build up down logs clean test dev-setup

COMPOSE_FILE := docker-compose.yml
PROJECT_NAME := messaging-app
APP_DIR := app

help:
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

build: 
	docker-compose -f $(COMPOSE_FILE) build

up: 
	docker-compose -f $(COMPOSE_FILE) up -d
	@echo "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
	@echo "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:5000"
	@echo "üîÑ Nginx (–ø—Ä–æ–∫—Å–∏): http://localhost:8080"
	@echo "üìä Grafana: http://localhost:3000 (admin/admin123)"
	@echo "üîç Prometheus: http://localhost:9090"
	@echo "üóÑÔ∏è PostgreSQL: localhost:5432"

up-build:
	docker-compose -f $(COMPOSE_FILE) up -d --build

down: 
	docker-compose -f $(COMPOSE_FILE) down

down-volumes: 
	docker-compose -f $(COMPOSE_FILE) down -v

logs: 
	docker-compose -f $(COMPOSE_FILE) logs -f

logs-app: 
	docker-compose -f $(COMPOSE_FILE) logs -f app

logs-db: 
	docker-compose -f $(COMPOSE_FILE) logs -f postgres

logs-nginx: 
	docker-compose -f $(COMPOSE_FILE) logs -f nginx

dev: 
	docker-compose -f $(COMPOSE_FILE) up -d postgres redis
	@echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ Redis –∑–∞–ø—É—â–µ–Ω—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "üóÑÔ∏è PostgreSQL: localhost:5432"
	@echo "üî¥ Redis: localhost:6379"

dev-app: 
	cd $(APP_DIR) && go run main.go

dev-setup: 
	@echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	cd $(APP_DIR) && go mod tidy
	@echo "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

test:
	cd $(APP_DIR) && go test -v ./...

test-coverage: 
	cd $(APP_DIR) && go test -v -cover ./...

db-migrate: 
	docker-compose -f $(COMPOSE_FILE) exec postgres psql -U user -d mydb -f /docker-entrypoint-initdb.d/init.sql

db-shell: 
	docker-compose -f $(COMPOSE_FILE) exec postgres psql -U user -d mydb

db-backup:
	docker-compose -f $(COMPOSE_FILE) exec postgres pg_dump -U user mydb > backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: backup_$(shell date +%Y%m%d_%H%M%S).sql"

db-restore: 
	docker-compose -f $(COMPOSE_FILE) exec -T postgres psql -U user -d mydb < $(BACKUP)

stats: 
	docker stats $(shell docker-compose -f $(COMPOSE_FILE) ps -q)

health: 
	@echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@curl -s http://localhost:5000/health | jq . || echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
	@curl -s http://localhost:8080/health | jq . || echo "‚ùå Nginx –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

clean: 
	docker-compose -f $(COMPOSE_FILE) down -v --remove-orphans
	docker system prune -f

clean-all: 
	docker-compose -f $(COMPOSE_FILE) down -v --remove-orphans --rmi all
	docker system prune -a -f

prod-deploy: 
	@echo "üöÄ –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
	docker-compose -f $(COMPOSE_FILE) pull
	docker-compose -f $(COMPOSE_FILE) up -d --remove-orphans
	@echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

prod-update: 
	@echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	docker-compose -f $(COMPOSE_FILE) build app
	docker-compose -f $(COMPOSE_FILE) up -d app
	@echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ"

api-test: 
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
	curl -X POST http://localhost:5000/api/v1/users \
		-H "Content-Type: application/json" \
		-d '{"username":"testuser","email":"test@example.com"}' | jq .
	@echo "\n–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
	curl -s http://localhost:5000/api/v1/users | jq .
	@echo "\n–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:"
	curl -s http://localhost:5000/api/v1/messages | jq .


install-tools: 
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
	@which jq > /dev/null || (echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq..." && sudo apt-get update && sudo apt-get install -y jq)
	@which curl > /dev/null || (echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ curl..." && sudo apt-get update && sudo apt-get install -y curl)
	@echo "‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

status:
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	docker-compose -f $(COMPOSE_FILE) ps

ports: 
	@echo "üîå –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–æ—Ä—Ç—ã:"
	@echo "5000  - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"
	@echo "8080  - Nginx (–ø—Ä–æ–∫—Å–∏)"
	@echo "3000  - Grafana"
	@echo "9090  - Prometheus"
	@echo "5432  - PostgreSQL"
	@echo "6379  - Redis"
	@echo "2112  - –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"

info: 
	@echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:"
	@echo "–ù–∞–∑–≤–∞–Ω–∏–µ: $(PROJECT_NAME)"
	@echo "–í–µ—Ä—Å–∏—è Docker Compose: $(shell docker-compose version --short)"
	@echo "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@docker-compose -f $(COMPOSE_FILE) ps --format "table {{.Name}}\t{{.Status}}\t{{.Ports}}"